<idea-plugin version="2">
  <name>emacsIDEAs</name>
  <description>
      <![CDATA[
      <p>Porting some great extensions of emacs to Intellij IDEA. such as AceJump, CopyWithoutSelectAction.</p>
      <p><b>AceJump</b></p>
      <ul>
          <li><b>C-L 't' 'm'</b>  :  <b>Basic Word Jump       </b>| Type C-L, then type target char (eg. 't') to jump to, then type marker char (eg. 'm') to move caret.</li>
          <li><b>C-J 't' 'm'</b>  :  <b>Basic Char Jump       </b></li>
      </ul>
      <br/>
      <p><b>AceJump, jump to special place</b></p>
      <ul>
          <li><b>C-L ' ' 'm'</b>  :  <b>Jump to line end or start. </b>| To show marker on line end and line start, type space ' ' as target char</li>
          <li><b>C-L ',' 'm'</b>  :  <b>Jump to symbol key </b>| Show markers on .{}(|`/\;.{}()[]?_=-+'"!@#$%^&*)_= </li>
      </ul>
      <br/>

      <br/>
      <p><b>Separate AceJump copy,cut,select command:</b></p>
      <ul>
          <li><b>C-i C-c 't' 'm'</b>  :  Copy jump area      </li> | C-i C-c means type C-i then continue type C-c
          <li><b>C-i C-x 't' 'm'</b>  :  Cut jump area       </li>
          <li><b>C-i C-i 't' 'm'</b>  :  Select jump area    </li>
          <li><b>C-i C-f 't' 'm'</b>  :  Basic Jump alias    </li>
      </ul>
      <br/>

      <p><b>Copy without selection:</b></p>
      <ul>
          <li><b>C-c  w  </b>  :  Copy word</li>
          <li><b>C-c  s  </b>  :  Copy string</li>
          <li><b>C-c  l  </b>  :  Copy line</li>
          <li><b>C-c  b  </b>  :  Copy block between balanced { and } </li>
          <li><b>C-c  q  </b>  :  Copy quoted, such as abcd in "abcd"</li>
          <li><b>C-c  a  </b>  :  Copy to line beginning</li>
          <li><b>C-c  A  </b>  :  Copy to file beginning</li>
          <li><b>C-c  e  </b>  :  Copy to line end</li>
          <li><b>C-c  E  </b>  :  Copy to file end</li>
          <li><b>C-c  p  </b>  :  Copy paragraph</li>
          <li><b>C-c  u  </b>  :  Copy to paragraph begining</li>
          <li><b>C-c  d  </b>  :  Copy to paragraph end</li>
          <li><b>C-c  ' '     (w | s | l | q | a | A | e | E | p | u | d | b)   </b>  :  Type one space to cut related area</li>
          <li><b>C-c  ' ' ' ' (w | s | l | q | a | A | e | E | p | u | d | b)   </b>  :  Type two space to select related area</li>
      </ul>

      <p><b>Replace target (word | line | paragraph) with text at current caret:</b></p>
      <ul>
          <li><b>C-i C-w 't' 'm'</b>  :  replace target word             </li>
          <li><b>C-i C-s 't' 'm'</b>  :  replace target string           </li>
          <li><b>C-i C-l 't' 'm'</b>  :  replace target line             </li>
          <li><b>C-i C-b 't' 'm'</b>  :  replace target block            </li>
          <li><b>C-i C-q 't' 'm'</b>  :  replace target quote            </li>
          <li><b>C-i C-a 't' 'm'</b>  :  replace target to line begining </li>
          <li><b>C-i C-e 't' 'm'</b>  :  replace target char to line end </li>
          <li><b>C-i C-p 't' 'm'</b>  :  replace target paragraph        </li>
          <li><b>C-i C-u 't' 'm'</b>  :  replace target to paragraph beginning </li>
          <li><b>C-i C-d 't' 'm'</b>  :  replace target to paragraph end       </li>
      </ul>
      <br/>

      <p><b>Obtain target (word | line | paragraph), then replace text at current caret:</b></p>
      <ul>
          <li><b>C-o C-w 't' 'm'</b>  :  obtain target word, then replace current word</li>
          <li><b>C-o C-s 't' 'm'</b>  :  obtain target string, then replace current string</li>
          <li><b>C-o C-l 't' 'm'</b>  :  obtain target line, then replace current line</li>
          <li><b>C-o C-b 't' 'm'</b>  :  obtain target block            </li>
          <li><b>C-o C-q 't' 'm'</b>  :  obtain target quote            </li>
          <li><b>C-o C-a 't' 'm'</b>  :  obtain target to line beginning</li>
          <li><b>C-o C-e 't' 'm'</b>  :  obtain target char to line end </li>
          <li><b>C-o C-p 't' 'm'</b>  :  obtain target paragraph        </li>
          <li><b>C-o C-u 't' 'm'</b>  :  obtain target to paragraph beginning </li>
          <li><b>C-o C-d 't' 'm'</b>  :  obtain target to paragraph end       </li>
      </ul>
      <br/>

      <p><b>Copy and Replace:</b></p>
      <ul>
          <li><b>C-I C-R (w | s | l | q | a | A | e | E | p | u | d) 't' 'm'</b>  :  copy current word/line/paragraph, jump, then replace target word/line/paragraph </li>
      </ul>

      <br/>
      <p><b>Highlight symbol:</b></p>
      <ul>
          <li><b>C-,</b>  :  hightlight-symbol-prev | Jump to prev occurrence of symbol that around caret</li>
          <li><b>C-.</b>  :  hightlight-symbol-next | Jump to next occurrence of symbol that around caret</li>
      </ul>
      <br/>
      <p><b>Just one space:</b></p>
      <ul>
          <li><b>C-M-Space</b>  :  Make just one space around caret by Ctrl-Cmd-Space.</li>
      </ul>
      <br/>
    ]]>
  </description>
    <change-notes><![CDATA[
    <html>
    <dl>
        <dt>1.3.0</dt>
        <dd>1. C-i C-s 't' 'm': Select jump area  ---changed_to---->  C-i C-i 't' 'm'  <br/>

            2. Add obtain(copy) remote target(w,l,e,p,b) and replace current(w,l,e,p,b) command:<br/>
               C-o C-(w | s | l | q | a | e | p | u | d | b)

            3. extend C-i C-(w|l|p)  to   C-I C-(w | s | l | q | a | e | p | u | d | b)
        <dd>
        <dt>1.2.0</dt>
        <dd>1. Remove support for command: C-L 't' (c, x, p, P, s)  'm' <br/>
               instead using the command: C-i C-(c,x,s) 't' 'm'<br/>
        <dd>
        <dt>1.1.9</dt>
        <dd>Add action to copy current word | line | paragraph, jump, then replace target word/line/paragraph.<br/>
            C-I C-R (w | s | l | q | a | A | e | E | p | u | d) 't' 'm'
        <dd>
        <dt>1.1.8</dt>
        <dd>Add hightlight-symbol-prev and hightlight-symbol-next<dd>
        <dt>1.1.7</dt>
        <dd>Let cut to paragraph end(C-c ' ' d) and cut paragraph (C-c ' ' p) skip ending brackets.<dd>
        <dt>1.1.6</dt>
        <dd>Add Jump Word Action, and assigned to C-L.  Jump Char Action assigned to C-J.<dd>
        <dt>1.1.5</dt>
        <dd>Changed AceJump's keymap to be more intuitive one. such as "C-L C-s" for select jump area. <dd>
        <dt>1.1.0</dt>
        <dd>Add copy without selection<dd>
        <dt>1.0</dt>
        <dd>Add basic AceJump function<dd>
    </dl>
    </html>
    ]]>
    </change-notes>
  <version>1.3.0</version>
  <vendor>whunmr@gmail.com</vendor>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="107.105"/>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>
  <depends>com.intellij.modules.platform</depends>

  <actions>
      <group id="emacsIDEAs" text="emacsIDEAs" description="emacsIDEAs">
          <!--<add-to-group group-id="MainMenu" anchor="last"  />-->
          <action id="emacsIDEAs.AceJumpWord" class="org.hunmr.acejump.AceJumpAction" text="AceJumpWord" description="AceJumpWord" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta L" />
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta F"/>

          </action>
          <action id="emacsIDEAs.AceJump" class="org.hunmr.acejump.AceJumpCharAction" text="AceJumpChar" description="AceJumpChar" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta J" />
          </action>
          <action id="emacsIDEAs.AceJumpSelect" class="org.hunmr.acejump.AceJumpSelectAction" text="AceJumpSelect" description="AceJumpSelect" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta I"/>
          </action>
          <action id="emacsIDEAs.AceJumpCopy" class="org.hunmr.acejump.AceJumpCopyAction" text="AceJumpCopy" description="AceJumpCopy" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta C"/>
          </action>
          <action id="emacsIDEAs.AceJumpCut" class="org.hunmr.acejump.AceJumpCutAction" text="AceJumpCut" description="AceJumpCut" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta X"/>
          </action>

          <!-- (w | s | l | q | a | e | p | u | d | b) -->
          <action id="emacsIDEAs.AceJumpAndReplace.Word" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.Word" description="AceJumpAndReplace.Word" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta W"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.String" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.String" description="AceJumpAndReplace.String" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta S"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.Line" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.Line" description="AceJumpAndReplace.Line" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta L"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.Quote" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.Quote" description="AceJumpAndReplace.Quote" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta Q"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.ToLineStart" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.ToLineStart" description="AceJumpAndReplace.ToLineStart" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta A"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.ToLineEnd" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.ToLineEnd" description="AceJumpAndReplace.ToLineEnd" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta E"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.Paragraph" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.Paragraph" description="AceJumpAndReplace.Paragraph" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta P"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.ToParagraphStart" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.ToParagraphStart" description="AceJumpAndReplace.ToParagraphStart" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta U"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.ToParagraphEnd" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.ToParagraphEnd" description="AceJumpAndReplace.ToParagraphEnd" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta D"/>
          </action>
          <action id="emacsIDEAs.AceJumpAndReplace.Block" class="org.hunmr.acejump.AceJumpAndReplaceRangeAction" text="AceJumpAndReplace.Block" description="AceJumpAndReplace.Block" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta B"/>
          </action>


          <!-- (w | s | l | q | a | e | p | u | d | b) -->
          <action id="emacsIDEAs.AceJumpObtainThenReplace.Word" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.Word" description="AceJumpObtainThenReplace.Word" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta W"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.String" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.String" description="AceJumpObtainThenReplace.String" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta S"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.Line" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.Line" description="AceJumpObtainThenReplace.Line" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta L"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.Quote" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.Quote" description="AceJumpObtainThenReplace.Quote" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta Q"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.ToLineStart" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.ToLineStart" description="AceJumpObtainThenReplace.ToLineStart" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta A"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.ToLineEnd" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.ToLineEnd" description="AceJumpObtainThenReplace.ToLineEnd" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta E"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.Paragraph" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.Paragraph" description="AceJumpObtainThenReplace.Paragraph" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta P"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.ToParagraphStart" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.ToParagraphStart" description="AceJumpObtainThenReplace.ToParagraphStart" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta U"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.ToParagraphEnd" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.ToParagraphEnd" description="AceJumpObtainThenReplace.ToParagraphEnd" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta D"/>
          </action>
          <action id="emacsIDEAs.AceJumpObtainThenReplace.Block" class="org.hunmr.acejump.AceJumpObtainThenReplaceRangeAction" text="AceJumpObtainThenReplace.Block" description="AceJumpObtainThenReplace.Block" >
              <keyboard-shortcut keymap="$default" first-keystroke="meta O" second-keystroke="meta B"/>
          </action>

      </group>

      <action id="CopyWithoutSelect" class="org.hunmr.copycutwithoutselection.CopyCutWithoutSelectAction" text="CopyWithoutSelection"
              description="org.hunmr.copycutwithoutselection.CopyCutWithoutSelectAction">
          <add-to-group group-id="emacsIDEAs" anchor="last"/>
          <keyboard-shortcut keymap="$default" first-keystroke="meta C" />
      </action>

      <action id="CopyThenJumpPaste" class="org.hunmr.copycutwithoutselection.CopyAndReplaceAction" text="CopyJumpAndReplace"
              description="org.hunmr.copycutwithoutselection.CopyAndReplaceAction">
          <add-to-group group-id="emacsIDEAs" anchor="last"/>
          <keyboard-shortcut keymap="$default" first-keystroke="meta I" second-keystroke="meta R" />
          <keyboard-shortcut keymap="$default" first-keystroke="meta R" />
      </action>

      <action id="HighlightNextSymbol" class="org.hunmr.highlightsymbol.HighlightNextSymbolAction" text="HighlightNextSymbol"
              description="org.hunmr.highlightsymbol.HighlightNextSymbolAction">
          <add-to-group group-id="emacsIDEAs" anchor="last"/>
          <keyboard-shortcut keymap="$default" first-keystroke="meta PERIOD" />
      </action>

      <action id="HighlightPrevSymbol" class="org.hunmr.highlightsymbol.HighlightPrevSymbolAction" text="HighlightPrevSymbol"
              description="org.hunmr.highlightsymbol.HighlightPrevSymbolAction">
          <add-to-group group-id="emacsIDEAs" anchor="last"/>
          <keyboard-shortcut keymap="$default" first-keystroke="meta COMMA" />
      </action>

      <action id="JustOneSpace" class="org.hunmr.buildin.JustOneSpace" text="JustOneSpace"
              description="org.hunmr.highlightsymbol.HighlightPrevSymbolAction">
          <add-to-group group-id="emacsIDEAs" anchor="last"/>
          <keyboard-shortcut keymap="$default" first-keystroke="meta ctrl SPACE" />
      </action>

  </actions>

  <extensions defaultExtensionNs="com.intellij">
    <!-- Add your extensions here -->
  </extensions>
</idea-plugin>
